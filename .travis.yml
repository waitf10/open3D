language: cpp
env:
  global:
    - SHARED=OFF
    - BUILD_TENSORFLOW_OPS=ON
    - BUILD_CUDA_MODULE=OFF
    - NPROC=2

notifications:
  email:
    on_success: never
    on_failure: always

matrix:

  include:
    # Style check only
    - os: linux
      dist: bionic
      sudo: true
      language: python
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - clang-7
            - clang-format-5.0
      install:
        - ./util/install_deps_ubuntu.sh assume-yes
      script:
        - mkdir build
        - cd build
        - cmake ..
        - pip install -U yapf==0.28.0 nbformat
        - make check-style

    # Build headless and docs
    - os: linux
      dist: bionic
      sudo: true
      language: python
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - doxygen
            - texlive
            - texlive-latex-extra
            - ghostscript
            - pandoc
      install:
        # Install ubuntu dependencies
        - ./util/install_deps_ubuntu.sh assume-yes
        # Install Kinect k4a package
        - curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        - sudo apt-add-repository --yes https://packages.microsoft.com/ubuntu/18.04/prod
        - sudo apt-get update
        # Accept EULA using a temporary workaround
        # https://github.com/microsoft/Azure-Kinect-Sensor-SDK/issues/1190#issuecomment-618473882
        - DEBIAN_FRONTEND=noninteractive
        - echo 'libk4a1.4 libk4a1.4/accepted-eula-hash string 0f5d5c5de396e4fee4c0753a21fee0c1ed726cf0316204edda484f08cb266d76' | sudo debconf-set-selections
        - echo 'libk4a1.4 libk4a1.4/accept-eula boolean true' | sudo debconf-set-selections
        - sudo apt-get --yes install libk4a1.4 libk4a1.4-dev k4a-tools
        # Install Python dependencies for building docs
        - which python
        - python -V
        - pip install -U -q "sphinx>=3.0" sphinx-rtd-theme nbsphinx Pillow
        # m2r needs a patch for sphinx 3
        # https://github.com/sphinx-doc/sphinx/issues/7420
        - pip install -U -q git+https://github.com/intel-isl/m2r@dev#egg=m2r
      script:
        - nproc
        - mkdir build
        - cd build
        - |
          cmake \
                -DENABLE_HEADLESS_RENDERING=ON \
                -DBUILD_GUI=OFF \
                -DBUILD_JUPYTER_EXTENSION=ON \
                -DWITH_OPENMP=ON \
                -DBUILD_AZURE_KINECT=ON \
                ..
        - make install-pip-package -j$NPROC
        - make -j$NPROC
        - bin/GLInfo
        - python -c "from open3d import *; import open3d; print(open3d)"
        - cd .. # Back to Open3D/
        - ./util/make_documentation.sh
        - ./.travis/deploy_docs.sh
